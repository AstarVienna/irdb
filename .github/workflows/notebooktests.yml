# Needs to be called from elsewhere or triggered manually.
# This allows for running the IRDB notebooks for any new branch in ScopeSim
# or ScopeSim_Templates, without the need for a corresponding IRDB branch if
# that's not required anyway.
# Note: If no options are passed, this installs ScopeSim and Templates from
# the main branch in either repo.

name: Notebook Tests
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      from_pypi:
        type: boolean
        description: "Use plain pip install and ignore branch names below."
        required: false
        default: false
      ScopeSim:
        type: string
        description: "Branch name to install ScopeSim from."
        required: false
        default: main
      ScopeSim_Templates:
        type: string
        description: "Branch name to install ScopeSim_Templates from."
        required: false
        default: main

  # Allow this workflow to be called from other repositories.
  workflow_call:
    inputs:
      from_pypi:
        type: boolean
        description: "Use plain pip install and ignore branch names below."
        required: false
        default: false
      ScopeSim:
        type: string
        description: "Branch name to install ScopeSim from."
        required: false
        default: main
      ScopeSim_Templates:
        type: string
        description: "Branch name to install ScopeSim_Templates from."
        required: false
        default: main

jobs:
  micado_notebooks:
    name: Run MICADO Notebooks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          # No matrix is used since this is a time-consuming task.
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.github_actions.txt

      - name: Install ScopeSim from repo
        if: ${{ inputs.from_pypi == false || inputs.from_pypi == 'false' }}
        run: |
          echo "Re-installing ScopeSim from source" >> $GITHUB_STEP_SUMMARY
          pip uninstall -y scopesim scopesim_templates
          pip install git+https://github.com/AstarVienna/ScopeSim.git@${{ inputs.ScopeSim }}
          pip install git+https://github.com/AstarVienna/ScopeSim_Templates.git@${{ inputs.ScopeSim_Templates }}

      - name: Run Notebooks
        env:
          PYDEVD_DISABLE_FILE_VALIDATION: 1
        run: |
          echo "## MICADO Notebooks tested" >> $GITHUB_STEP_SUMMARY
          sed -i "s/USE_FULL_DETECTOR = True/USE_FULL_DETECTOR = False/g" MICADO/docs/example_notebooks/*.ipynb
          sed -i 's/# cmd\[\\"!SIM.spectral.spectral_bin_width/cmd\[\\"!SIM.spectral.spectral_bin_width/g'   MICADO/docs/example_notebooks/*.ipynb
          for fn in MICADO/docs/example_notebooks/*.ipynb
          do
            echo "${fn}"
            echo "- ${fn}" >> $GITHUB_STEP_SUMMARY
            /usr/bin/time -v jupytext --execute --update "${fn}"
          done

  metis_notebooks:
    name: Run METIS Notebooks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          # No matrix is used since this is a time-consuming task.
          python-version: 3.11
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.github_actions.txt

      - name: Install ScopeSim from repo
        if: ${{ inputs.from_pypi == false || inputs.from_pypi == 'false' }}
        run: |
          echo "Re-installing ScopeSim from source" >> $GITHUB_STEP_SUMMARY
          pip uninstall -y scopesim scopesim_templates
          pip install git+https://github.com/AstarVienna/ScopeSim.git@${{ inputs.ScopeSim }}
          pip install git+https://github.com/AstarVienna/ScopeSim_Templates.git@${{ inputs.ScopeSim_Templates }}
      - name: Run Notebooks
        env:
          PYDEVD_DISABLE_FILE_VALIDATION: 1
        run: |
          echo "## METIS Notebooks tested" >> $GITHUB_STEP_SUMMARY
          echo "### Example Notebooks" >> $GITHUB_STEP_SUMMARY
          for fn in METIS/docs/example_notebooks/*.ipynb
          do
            echo "${fn}"
            echo "- ${fn}" >> $GITHUB_STEP_SUMMARY
            /usr/bin/time -v jupytext --execute --update "${fn}"
          done
          echo "## Demo Notebooks" >> $GITHUB_STEP_SUMMARY
          for fn in METIS/docs/example_notebooks/demos/*.ipynb
          do
            echo "${fn}"
            echo "- ${fn}" >> $GITHUB_STEP_SUMMARY
            /usr/bin/time -v jupytext --execute --update "${fn}"
          done
